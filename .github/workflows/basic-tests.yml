# .github/workflows/basic-tests.yml

name: Test Branch CI - Basic Tests

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [ Debug ]
        sanitizer: [ none, asan, ubsan ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ ninja-build libgtest-dev

      - name: Configure CMake
        run: |
          CMAKE_FLAGS=""
          LINKER_FLAGS=""
          
          if [[ "${{ matrix.sanitizer }}" == "asan" ]]; then
            CMAKE_FLAGS="-DCMAKE_CXX_FLAGS=-fsanitize=address -DCMAKE_EXE_LINKER_FLAGS=-fsanitize=address"
          elif [[ "${{ matrix.sanitizer }}" == "ubsan" ]]; then
            CMAKE_FLAGS="-DCMAKE_CXX_FLAGS='-fsanitize=undefined -fno-sanitize-recover' -DCMAKE_EXE_LINKER_FLAGS=-fsanitize=undefined"
          fi
          
          echo "Using CMake flags: $CMAKE_FLAGS"
          cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -G Ninja $CMAKE_FLAGS

      - name: Build
        run: cmake --build build

      - name: List generated test executables
        run: |
          echo "=== Test executables ==="
          find build -name "*test*" -type f -executable | grep -v ".a$" | sort
          echo "=== All executables ==="
          find build -type f -executable | grep -v ".a$" | sort

      - name: Show CTest available tests
        run: cd build && ctest -N

      - name: Run tests with verbose output
        run: cd build && ctest --verbose --output-on-failure
